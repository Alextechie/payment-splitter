// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Payment {
  id        String   @id @default(uuid())
  amount    Int
  currency  String
  createdAt DateTime @default(now())
  status    String   @default("PENDING")
  rulesUsed String?
}

model Split {
  id    String @id @default(uuid())
  type  String
  value Float

  recipientId String
  recipient   Recipient @relation(fields: [recipientId], references: [id])

  outcomeId String
  outcome   Outcome @relation(fields: [outcomeId], references: [id])
}

model Recipient {
  id      String  @id @default(uuid())
  name    String
  account String
  splits  Split[]
  rules   Rule[]
}

model Rule {
  id          String      @id @default(uuid())
  priority    Int?
  conditions  Condition[]
  group       RuleGroup   @relation(fields: [groupId], references: [id])
  groupId     String
  Outcome     Outcome?
  Recipient   Recipient?  @relation(fields: [recipientId], references: [id])
  recipientId String?
}

model RuleGroup {
  id        String   @id @default(uuid())
  name      String
  rules     Rule[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Condition {
  id       String @id @default(uuid())
  field    String
  operator String
  value    Json

  ruleId String
  rule   Rule   @relation(fields: [ruleId], references: [id])
}

model Outcome {
  id      String  @id @default(uuid())
  status  String
  bonus   Int?
  message String?
  splits  Split[]
  ruleId  String  @unique
  rule    Rule    @relation(fields: [ruleId], references: [id])
}
